package XQuery;

public class DebugLogger {
	// setting master control to false will cause all
	// debug information output disappear
	public static boolean MasterControl = true;

	// Master switch of different type of log
	public static boolean MasterRegularLog = true;
	public static boolean MasterDebugLog = true;
	public static boolean MasterErrorLog = true;

	// specific switch of each object
	private boolean RegularLog = true;
	private boolean DebugLog = true;
	private boolean ErrorLog = true;

	public static final int REGULAR = 1;
	public static final int DEBUG = 2;
	public static final int ERROR = 3;

	// EveryLog generated by an instance of this class will
	// start with this string
	private String LogPrefix = "";

	// TODO: in the future, may try to refactor this using strategy pattern
	public DebugLogger(String prefix) {
		LogPrefix = new String(prefix);
	}

	/**
	 * 
	 * @param master
	 *            true to enable all log, false to disable all log, highest
	 *            priority
	 * @param regular
	 *            true to enable regular log, false to disable regular log
	 * @param debug
	 *            true to enable debug log, false to disable debug log
	 * @param error
	 *            true to enable error log, false to disable error log
	 */
	public void MasterControl(boolean master, boolean regular, boolean debug,
			boolean error) {
		MasterControl = master;
		MasterRegularLog = regular;
		MasterDebugLog = debug;
		MasterErrorLog = error;
	}

	/**
	 * 
	 * @param type
	 * @return
	 */
	public boolean ControlFilter(int type) {
		if (!MasterErrorLog) {
			return false;
		} else {
			switch (type) {
			case REGULAR:
				if (!MasterRegularLog) {
					return false;
				} else {
					if (!RegularLog) {
						return false;
					}
				}
				break;
			case DEBUG:
				if (!MasterDebugLog) {
					return false;
				} else {
					if (!DebugLog) {
						return false;
					}
				}
				break;
			case ERROR:
				if (!MasterErrorLog) {
					return false;
				} else {
					if (!ErrorLog) {
						return false;
					}
				}
				break;
			default:
				break;
			}
		}
		return true;
	}

	private void OutputLog(String message) {
		System.out.println(message);
	}

	/**
	 * 
	 * @param message
	 */
	public void RegularLog(String message) {
		if (ControlFilter(REGULAR)) {
			String output = "#Regular\t@" + LogPrefix + ":" + message;
			OutputLog(output);
		}
	}

	/**
	 * 
	 * @param message
	 */
	public void DebugLog(String message) {
		if (ControlFilter(DEBUG)) {
			String output = "%Debug\t@" + LogPrefix + ":" + message;
			OutputLog(output);
		}
	}

	/**
	 * 
	 * @param message
	 */
	public void ErrorLog(String message) {
		if (ControlFilter(ERROR)) {
			String output = "!Error\t@" + LogPrefix + ":" + message;
			OutputLog(output);
		}
	}

}
